int part(int a[], int start, int end)
{ 
  int pivot = a[end];
  int i = (start-1);
  for (int j = start; j < end; j++)
  {
    if (a[j] <= pivot)
    {  
        i++;
        int t = a[i];
        a[i]=a[j];
        a[j]=t;
    }
  }
  int f = a[i+1];
  a[i+1]=a[end];
  a[end]=f;
  return (i + 1);
}

void quicksort(int a[], int start, int end)
{
  if (start < end)
  {
    int p = part(a, start, end);
    quicksort(a, start, p-1);
    quicksort(a, p+1, end);
  }
}

void printing(int a[], int n)
{
  for (int i = 0; i < n; ++i)
  {
    printf("%d  ", a[i]);
  }
  printf("\n");
}

void main()
{
    int l=0;
    printf("Enter length of array\n");
    scanf("%d", &l);
    int a[l];
    printf("Enter elements into the array\n");
    for(int i = 0; i < l; ++i)
    {
        scanf("%d", &a[i]);
    }
    printf("Input array is:\n");
    printing(a, l);
    quicksort(a, 0, l-1);
    printf("Sorted array: \n");
    printing(a, l);
}
