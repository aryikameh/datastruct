#include <stddef.h>
#include <stdlib.h>
#include <stdio.h>
struct node
{
    int numbers;
    struct node* link;
};
 
void push(struct node** top, int newnum)
{
    int l= sizeof(struct node);
    struct node* new = (struct node*)malloc(l);
    new->numbers = newnum;
    new->link = (*top);
    (*top) = new;
}
struct node* top = NULL;
struct node* sorted = NULL;
void insertsorted(struct node* new)
{
    if (sorted == NULL || sorted->numbers >= new->numbers) {
        new->link = sorted;
        sorted = new;
    }
    else
    {
        struct node* curr = sorted;
        while (curr->link != NULL && curr->link->numbers < new->numbers)
        {
            curr = curr->link;
        }
        new->link = curr->link;
        curr->link = new;
    }
}
void insertionsort()
{
  
    struct node* curr = top;
    while (curr != NULL)
    {
        struct node* link = curr->link;
        insertsorted(curr);
        curr = link;
    }
    top = sorted;
}
  
void printlist(struct node* top)
{
    while (top != NULL) {
        printf("%d->", top->numbers);
        top = top->link;
    }
    printf("NULL");
}
  
int main()
{
    push(&top, 1);
    push(&top, 5);
    push(&top, 3);
    push(&top, 2);
    push(&top, 6);
    push(&top, 7);
    push(&top, 4);
    push(&top, 10);
    push(&top, 8);
    push(&top, 9);
    printf("Linked List before sorting:\n");
    printlist(top);
    printf("\n");
    insertionsort(top);
    printf("Linked List after sorting:\n");
    printlist(top);
}
