#include <stddef.h>
#include <stdlib.h>
#include <stdio.h>
struct node
{
    int numbers;
    struct node* link;
};

struct node *reverse (struct node *top, int k)
{
    if (!top)
    {
        return NULL;
    }
    struct node* curr = top;
    struct node* link = NULL;
    struct node* last = NULL;
    int c = 0;

    while (curr!= NULL && c<k)
    {
        link  = curr->link;
        curr->link = last;
        last = curr;
        curr = link;
        c++;
    }
    if (link!=NULL)
       top->link = reverse(link, k);
 
    return last;
}

void push(struct node** top, int newnum)
{
    int l= sizeof(struct node);
    struct node* new = (struct node*)malloc(l);
    new->numbers = newnum;
    new->link = (*top);
    (*top) = new;
}

void printing(struct node* top)
{
    struct node* t= top;
    while (t != NULL)
    {
        printf("%d ", t->numbers);
        t = t->link;
    }
}

void main()
{
    struct node* top = NULL;
    push(&top, 1);
    push(&top, 2);
    push(&top, 3);
    push(&top, 4);
    push(&top, 5);
    push(&top, 6);
    push(&top, 7);
    push(&top, 8);
    push(&top, 9);
    push(&top, 10);
     printf("\nGiven linked list \n");
     printing(top);
     top = reverse(top, 4);
     printf("\nReversed Linked list \n");
     printing(top);
}
